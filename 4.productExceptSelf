class Solution {
    public static int[] productExceptSelf(int arr[]) {
        // code here
        int product = 1, flag=0;
        int[] pro = new int[arr.length];
        for(int i:arr){
            if(i==0) 
            flag++;
            else
            product*=i;
        }
        for(int i=0;i<arr.length;i++){
            if((arr[i]!=0 && flag>0) || flag>1)
            pro[i]=0;
            else if(arr[i]!=0 && flag==0)
            pro[i] = product/arr[i];
            else
            pro[i]=product;
            
        }
        return pro;
    }
}
-----------------------prefix suffix arrays--------------------------
static int[] productExceptSelf(int[] arr) {
        int n = arr.length;
        int[] prefProduct = new int[n];
        int[] suffProduct = new int[n];
        int[] res = new int[n];

        // Construct the prefProduct array
        prefProduct[0] = 1;
        for (int i = 1; i < n; i++)
            prefProduct[i] = arr[i - 1] * prefProduct[i - 1];

        // Construct the suffProduct array
        suffProduct[n - 1] = 1;
        for (int j = n - 2; j >= 0; j--)
            suffProduct[j] = arr[j + 1] * suffProduct[j + 1];

        // Construct the result array using
        // prefProduct[] and suffProduct[]
        for (int i = 0; i < n; i++)
            res[i] = prefProduct[i] * suffProduct[i];

        return res;
    }
